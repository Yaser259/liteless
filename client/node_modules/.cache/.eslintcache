[{"/Users/yaser/Desktop/liteless/client/src/index.js":"1","/Users/yaser/Desktop/liteless/client/src/App.js":"2","/Users/yaser/Desktop/liteless/client/src/components/Forgot.jsx":"3","/Users/yaser/Desktop/liteless/client/src/components/Schedule.jsx":"4","/Users/yaser/Desktop/liteless/client/src/components/MeetingHistory.jsx":"5","/Users/yaser/Desktop/liteless/client/src/components/Home.jsx":"6","/Users/yaser/Desktop/liteless/client/src/components/Create.jsx":"7","/Users/yaser/Desktop/liteless/client/src/components/About.jsx":"8","/Users/yaser/Desktop/liteless/client/src/components/SignUp.jsx":"9","/Users/yaser/Desktop/liteless/client/src/components/Dashboard.jsx":"10","/Users/yaser/Desktop/liteless/client/src/components/SignIn.jsx":"11","/Users/yaser/Desktop/liteless/client/src/components/UserStatus.jsx":"12","/Users/yaser/Desktop/liteless/client/src/components/NavBar.jsx":"13","/Users/yaser/Desktop/liteless/client/src/components/EmailVerify.jsx":"14","/Users/yaser/Desktop/liteless/client/src/components/ChangePassword.jsx":"15","/Users/yaser/Desktop/liteless/client/src/components/ResetPassword.jsx":"16","/Users/yaser/Desktop/liteless/client/src/firebase-config.js":"17"},{"size":226,"mtime":1648651145680,"results":"18","hashOfConfig":"19"},{"size":2122,"mtime":1653119880233,"results":"20","hashOfConfig":"19"},{"size":2340,"mtime":1653119880234,"results":"21","hashOfConfig":"19"},{"size":2856,"mtime":1652093521673,"results":"22","hashOfConfig":"19"},{"size":2439,"mtime":1653140157911,"results":"23","hashOfConfig":"19"},{"size":2480,"mtime":1653119881232,"results":"24","hashOfConfig":"19"},{"size":3929,"mtime":1653119881232,"results":"25","hashOfConfig":"19"},{"size":1259,"mtime":1644741723962,"results":"26","hashOfConfig":"19"},{"size":4941,"mtime":1654714156893,"results":"27","hashOfConfig":"19"},{"size":2323,"mtime":1653119880234,"results":"28","hashOfConfig":"19"},{"size":4950,"mtime":1653982015317,"results":"29","hashOfConfig":"19"},{"size":5516,"mtime":1654672100993,"results":"30","hashOfConfig":"19"},{"size":2109,"mtime":1654671950068,"results":"31","hashOfConfig":"19"},{"size":1184,"mtime":1652428798990,"results":"32","hashOfConfig":"19"},{"size":3517,"mtime":1653119880680,"results":"33","hashOfConfig":"19"},{"size":2398,"mtime":1653119880234,"results":"34","hashOfConfig":"19"},{"size":510,"mtime":1653929086362,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nvp4yt",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/Users/yaser/Desktop/liteless/client/src/index.js",[],[],"/Users/yaser/Desktop/liteless/client/src/App.js",[],[],"/Users/yaser/Desktop/liteless/client/src/components/Forgot.jsx",[],[],"/Users/yaser/Desktop/liteless/client/src/components/Schedule.jsx",[],[],["95","96"],"/Users/yaser/Desktop/liteless/client/src/components/MeetingHistory.jsx",["97"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react/cjs/react.development\";\n\nexport default function MeetingHistory() {\n  const [history, setHistory] = useState([]);\n  const uid = localStorage.getItem(\"uid\");\n  const admin = localStorage.getItem(\"admin\");\n  useEffect(() => {\n    getHistory();\n  }, []);\n\n  function getHistory() {\n    fetch(\n      `https://test.clitehd.com/api/meetinghistory/${admin === \"1\" ? \"\" : uid}`\n    ).then((result) => {\n      result.json().then((data) => {\n        setHistory(data);\n      });\n    });\n  }\n\n  function handleArchive(roomname) {\n    fetch(`https://test.clitehd.com/api/meetinghistory/${roomname}`, {\n      method: \"PUT\",\n    }).then((result) => {\n      console.log(result);\n      result.json().then(() => {\n        getHistory();\n      });\n    });\n  }\n\n  return (\n    <div>\n      <table className=\"styled-table\">\n        <thead>\n          <tr>\n            <th>Roomname</th>\n            <th>Date and Time</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {history.map((gethistory) =>\n            gethistory.isArchieved === 0 ? (\n              <>\n                <tr key={gethistory.roomname}>\n                  <td>{gethistory.roomname}</td>\n                  <td>{gethistory.dateandtime}</td>\n                  <td>\n                    <button\n                      className=\"btn btn-warning\"\n                      onClick={() => handleArchive(gethistory.roomname)}\n                    >\n                      Archive\n                    </button>\n                  </td>\n                </tr>\n              </>\n            ) : null\n          )}\n        </tbody>\n      </table>\n      {admin === \"1\" ? (\n        <table className=\"styled-table\">\n          <caption>Archived Meeting History</caption>\n          <thead>\n            <tr>\n              <th>Roomname</th>\n              <th>Date and Time</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {history.map((gethistory) =>\n              gethistory.isArchieved === 1 ? (\n                <>\n                  <tr key={gethistory.roomname}>\n                    <td>{gethistory.roomname}</td>\n                    <td>{gethistory.dateandtime}</td>\n                    <td>Archived</td>\n                  </tr>\n                </>\n              ) : null\n            )}\n          </tbody>\n        </table>\n      ) : null}\n    </div>\n  );\n}\n","/Users/yaser/Desktop/liteless/client/src/components/Home.jsx",["98","99"],[],"/Users/yaser/Desktop/liteless/client/src/components/Create.jsx",["100","101"],[],"/Users/yaser/Desktop/liteless/client/src/components/About.jsx",[],[],"/Users/yaser/Desktop/liteless/client/src/components/SignUp.jsx",["102"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\n\nexport default function SignUp() {\n  // const formData = require(\"form-data\");\n  // const Mailgun = require(\"mailgun.js\");\n  // const mailgun = new Mailgun(formData);\n  // const mg = mailgun.client({\n  //   username: \"api\",\n  //   key: process.env.MAILGUN_API_KEY || \"key-yourkeyhere\",\n  // });\n\n  const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n  async function userSignup(url = \"\", data = {}) {\n    const response = await fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(data),\n    });\n    return response.status;\n  }\n\n  const signup = (event) => {\n    event.preventDefault();\n    const email = document.getElementById(\"email\");\n    const password = document.getElementById(\"password\");\n    const repeat = document.getElementById(\"repeat\");\n    const emailError = document.getElementById(\"emailError\");\n    const passwordError = document.getElementById(\"passwordError\");\n    const repeatError = document.getElementById(\"repeatError\");\n    emailError.innerHTML = \"\";\n    passwordError.innerHTML = \"\";\n    repeatError.innerHTML = \"\";\n    document.getElementById(\"email\").style.borderColor = \"#4f8a82\";\n    document.getElementById(\"password\").style.borderColor = \"#4f8a82\";\n    document.getElementById(\"repeat\").style.borderColor = \"#4f8a82\";\n    if (email.value === \"\" || email.value === null) {\n      document.getElementById(\"email\").style.borderColor = \"red\";\n      emailError.innerHTML = \"Email is required!\";\n    } else if (!regex.test(email.value)) {\n      document.getElementById(\"email\").style.borderColor = \"red\";\n      emailError.innerHTML = \"This is not a valid email format!\";\n    }\n    if (password.value === \"\" || password.value === null) {\n      document.getElementById(\"password\").style.borderColor = \"red\";\n      passwordError.innerHTML = \"Password is required!\";\n    } else if (password.value.length < 4) {\n      document.getElementById(\"password\").style.borderColor = \"red\";\n      passwordError.innerHTML = \"Password must be more than 4 characters!\";\n    } else if (password.value.length > 10) {\n      document.getElementById(\"password\").style.borderColor = \"red\";\n      passwordError.innerHTML =\n        \"Password cannot exceed more than 10 characters!\";\n    }\n    if (repeat.value === \"\" || repeat.value === null) {\n      document.getElementById(\"repeat\").style.borderColor = \"red\";\n      repeatError.innerHTML = \"Repeat password is required!\";\n    } else if (password.value !== repeat.value) {\n      document.getElementById(\"repeat\").style.borderColor = \"red\";\n      repeatError.innerHTML = \"Password does not match!\";\n    }\n    if (\n      regex.test(email.value) &&\n      password.value !== \"\" &&\n      password.value === repeat.value\n    ) {\n      userSignup(\"https://test.clitehd.com/api/register\", {\n        email: email.value.toLowerCase(),\n        password: repeat.value,\n      }).then((data) => {\n        if (data === 400) {\n          document.getElementById(\"email\").style.borderColor = \"red\";\n          emailError.innerHTML = \"User with this email already exists!\";\n        } else {\n          window.location = \"/login\";\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"center center-signup\">\n        <h1 className=\"signup-title\">Create Account</h1>\n        <form id=\"signup-form\" action=\"#\">\n          <div className=\"text_field\">\n            <label className=\"email\" htmlFor=\"email\">\n              E-mail\n            </label>\n            <br />\n            <input type=\"email\" id=\"email\" placeholder=\"Enter E-mail\" />\n          </div>\n          <p style={{ color: \"red\" }} id=\"emailError\"></p>\n          <div className=\"text_field\">\n            <label className=\"password\" htmlFor=\"password\">\n              Password\n            </label>\n            <br />\n            <input type=\"password\" id=\"password\" placeholder=\"Enter Password\" />\n          </div>\n          <p style={{ color: \"red\" }} id=\"passwordError\"></p>\n          <div className=\"text_field\">\n            <label className=\"repeat\" htmlFor=\"repeat\">\n              Confirm Password\n            </label>\n            <br />\n            <input type=\"password\" id=\"repeat\" placeholder=\"Repeat Password\" />\n          </div>\n          <p style={{ color: \"red\" }} id=\"repeatError\"></p>\n          <button\n            className=\"signup\"\n            type=\"submit\"\n            onClick={(event) => signup(event)}\n          >\n            SignUp\n          </button>\n          <br />\n          <a className=\"pass forgot-new\">\n            <Link className=\"link\" to=\"/login\">\n              Already have an account?\n            </Link>\n          </a>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/yaser/Desktop/liteless/client/src/components/Dashboard.jsx",[],[],"/Users/yaser/Desktop/liteless/client/src/components/SignIn.jsx",["103","104","105","106","107","108"],[],"import { Link } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport { auth, app } from \"../firebase-config\";\nimport { getAuth, signInWithCustomToken } from \"firebase/auth\";\nimport { getDatabase, set, ref } from \"firebase/database\";\n\nexport default function SignIn() {\n  const database = getDatabase();\n  function writeUserData(userId, email, token) {\n    const db = database;\n    set(ref(db, \"UserStatus/\" + userId), {\n      email: email,\n      status: \"Online\",\n      token: token,\n    })\n      .then(() => {\n        console.log(\"User Status Updated\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n  async function userLogin(url = \"\", data = {}) {\n    const response = await fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(data),\n    });\n    return {\n      status: response.status,\n      body: await response.json(),\n    };\n  }\n\n  const login = (event) => {\n    event.preventDefault();\n    const email = document.getElementById(\"email\");\n    const password = document.getElementById(\"password\");\n    const emailError = document.getElementById(\"emailError\");\n    const passwordError = document.getElementById(\"passwordError\");\n    emailError.innerHTML = \"\";\n    passwordError.innerHTML = \"\";\n    document.getElementById(\"email\").style.borderColor = \"#4f8a82\";\n    document.getElementById(\"password\").style.borderColor = \"#4f8a82\";\n    if (email.value === \"\" || email.value === null) {\n      document.getElementById(\"email\").style.borderColor = \"red\";\n      emailError.innerHTML = \"Email is required!\";\n    } else if (!regex.test(email.value)) {\n      document.getElementById(\"email\").style.borderColor = \"red\";\n      emailError.innerHTML = \"This is not a valid email format!\";\n    }\n    if (password.value === \"\" || password.value === null) {\n      document.getElementById(\"password\").style.borderColor = \"red\";\n      passwordError.innerHTML = \"Password is required!\";\n    }\n    if (regex.test(email.value) && password.value !== \"\") {\n      userLogin(\"https://test.clitehd.com/api/login\", {\n        email: email.value.toLowerCase(),\n        password: password.value,\n      }).then((data) => {\n        if (data.status === 400) {\n          passwordError.innerHTML = \"Email or password is incorrect!\";\n        } else if (data.status === 401) {\n          passwordError.innerHTML = \"Email or password is incorrect!\";\n        } else {\n          localStorage.setItem(\"loginEmail\", email.value);\n          localStorage.setItem(\"loginPassword\", password.value);\n          localStorage.setItem(\"uid\", JSON.stringify(data.body.id));\n          localStorage.setItem(\"admin\", JSON.stringify(data.body.isAdmin));\n          localStorage.setItem(\"accessToken\", data.body.token);\n          const accessToken = localStorage.getItem(\"accessToken\");\n          writeUserData(localStorage.getItem(\"uid\"), email.value, accessToken);\n          setTimeout(() => {\n            window.location = \"/home\";\n          }, 1000);\n          // signInWithCustomToken(auth, accessToken)\n          //   .then((userCredential) => {\n          //     console.log(userCredential);\n          //   })\n          //   .catch((error) => {\n          //     const errorCode = error.code;\n          //     const errorMessage = error.message;\n          //   });\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"center center-login\">\n        <h1 className=\"login-title\">Welcome Back</h1>\n        <form action=\"#\">\n          <div className=\"text_field\">\n            <label className=\"email-login email\" htmlFor=\"email\">\n              E-mail\n            </label>\n            <br />\n            <input type=\"email\" id=\"email\" placeholder=\"Enter E-mail\" />\n          </div>\n          <p style={{ color: \"red\" }} id=\"emailError\"></p>\n          <div className=\"text_field\">\n            <label className=\"password-login password\" htmlFor=\"password\">\n              Password\n            </label>\n            <br />\n            <input type=\"password\" id=\"password\" placeholder=\"Enter Password\" />\n          </div>\n          <p style={{ color: \"red\" }} id=\"passwordError\"></p>\n          <button\n            className=\"login\"\n            type=\"submit\"\n            onClick={(event) => login(event)}\n          >\n            Login\n          </button>\n          <br />\n          <a className=\"pass forgot-new\">\n            <Link className=\"link\" to=\"/forgot\">\n              Forgot Password?\n            </Link>\n          </a>\n          <br />\n          <a className=\"signup-link forgot-new\">\n            <Link className=\"link\" to=\"/signup\">\n              New to LiteLess?\n            </Link>\n          </a>\n        </form>\n      </div>\n    </div>\n  );\n}\n",["109","110"],"/Users/yaser/Desktop/liteless/client/src/components/UserStatus.jsx",["111"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react/cjs/react.development\";\nimport { get, getDatabase, ref, remove, set } from \"firebase/database\";\n\nexport default function UserStatus() {\n  const [users, setUsers] = useState([]);\n  const [status, setStatus] = useState([]);\n  const database = getDatabase();\n  const db = database;\n  function writeUserData(userId, email, token) {\n    set(ref(db, \"UserStatus/\" + userId), {\n      email: email,\n      status: \"Offline\",\n      token: token,\n    })\n      .then(() => {\n        console.log(\"User Status Updated\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  async function getUserStatus() {\n    const db = database;\n    const data = await get(ref(db, \"UserStatus/\"));\n    const statuses = await data.val();\n    setStatus(Object.values(statuses));\n  }\n\n  const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n  const admin = localStorage.getItem(\"admin\");\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  function getUsers() {\n    fetch(`https://test.clitehd.com/api/admin/users`).then((result) => {\n      result.json().then((data) => {\n        setUsers(data);\n        getUserStatus();\n      });\n    });\n  }\n\n  function handleDelete(uid) {\n    remove(ref(db, \"UserStatus/\" + uid))\n      .then(() => {\n        console.log(\"User deleted\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    fetch(`https://test.clitehd.com/api/admin/users/${uid}`, {\n      method: \"DELETE\",\n    }).then((result) => {\n      result.json().then(() => {\n        getUsers();\n      });\n    });\n  }\n\n  async function userSignup(url = \"\", data = {}) {\n    const response = await fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(data),\n    });\n    return {\n      status: response.status,\n      body: await response.json(),\n    };\n  }\n\n  const signup = (event) => {\n    event.preventDefault();\n    const email = document.getElementById(\"email\");\n    const password = document.getElementById(\"password\");\n    document.getElementById(\"email\").style.borderColor = \"#4f8a82\";\n    document.getElementById(\"password\").style.borderColor = \"#4f8a82\";\n    if (email.value === \"\" || email.value === null) {\n      document.getElementById(\"email\").style.borderColor = \"red\";\n    } else if (!regex.test(email.value)) {\n      document.getElementById(\"email\").style.borderColor = \"red\";\n    }\n    if (password.value === \"\" || password.value === null) {\n      document.getElementById(\"password\").style.borderColor = \"red\";\n    } else if (password.value.length < 4) {\n      document.getElementById(\"password\").style.borderColor = \"red\";\n    } else if (password.value.length > 10) {\n      document.getElementById(\"password\").style.borderColor = \"red\";\n    }\n    if (regex.test(email.value) && password.value !== \"\") {\n      userSignup(\"https://test.clitehd.com/api/register\", {\n        email: email.value,\n        password: password.value,\n      }).then((data) => {\n        if (data.status === 400) {\n          document.getElementById(\"email\").style.borderColor = \"red\";\n          document.getElementById(\"password\").style.borderColor = \"red\";\n        } else {\n          email.value = \"\";\n          password.value = \"\";\n          writeUserData(data.body.uid, email.value, data.body.token);\n          getUsers();\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      {admin === \"1\" ? (\n        <form className=\"row g-3 addForm\">\n          <div className=\"col-md-3 addEmail\">\n            <label className=\"form-label\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              className=\"form-control p-2\"\n            ></input>\n          </div>\n          <div className=\"col-md-3 addPassword\">\n            <label className=\"form-label\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              className=\"form-control p-2\"\n            ></input>\n          </div>\n          <div className=\"col-md-3\">\n            <button\n              type=\"submit\"\n              id=\"addUser\"\n              className=\"btn btn-success\"\n              onClick={(event) => signup(event)}\n            >\n              Add\n            </button>\n          </div>\n        </form>\n      ) : null}\n      <table className=\"styled-table\">\n        <thead>\n          <tr>\n            <th>Users</th>\n            <th>Status</th>\n            {admin === \"1\" ? <th>Action</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((getusers, index) => (\n            <tr key={index}>\n              <td>{getusers.Email}</td>\n              {status.map((presence) =>\n                getusers.Email === presence.email ? (\n                  <td>{presence.status}</td>\n                ) : null\n              )}\n              {admin === \"1\" ? (\n                getusers.isAdmin === 0 ? (\n                  <td>\n                    <button\n                      className=\"btn btn-danger\"\n                      onClick={() => handleDelete(getusers.UserId)}\n                    >\n                      Delete\n                    </button>\n                  </td>\n                ) : null\n              ) : null}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n",["112","113"],"/Users/yaser/Desktop/liteless/client/src/components/NavBar.jsx",[],[],"/Users/yaser/Desktop/liteless/client/src/components/EmailVerify.jsx",[],[],"/Users/yaser/Desktop/liteless/client/src/components/ChangePassword.jsx",[],[],"/Users/yaser/Desktop/liteless/client/src/components/ResetPassword.jsx",[],[],"/Users/yaser/Desktop/liteless/client/src/firebase-config.js",[],[],["114","115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":10,"column":6,"nodeType":"122","endLine":10,"endColumn":8,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":32,"column":32,"nodeType":"126","messageId":"127","endLine":32,"endColumn":34},{"ruleId":"124","severity":1,"message":"128","line":36,"column":11,"nodeType":"129","messageId":"130","endLine":36,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":60,"column":28,"nodeType":"126","messageId":"127","endLine":60,"endColumn":30},{"ruleId":"124","severity":1,"message":"128","line":66,"column":11,"nodeType":"129","messageId":"130","endLine":66,"endColumn":18},{"ruleId":"131","severity":1,"message":"132","line":128,"column":11,"nodeType":"133","endLine":128,"endColumn":42},{"ruleId":"134","severity":1,"message":"135","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":14},{"ruleId":"134","severity":1,"message":"138","line":3,"column":16,"nodeType":"136","messageId":"137","endLine":3,"endColumn":19},{"ruleId":"134","severity":1,"message":"139","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":17},{"ruleId":"134","severity":1,"message":"140","line":4,"column":19,"nodeType":"136","messageId":"137","endLine":4,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":128,"column":11,"nodeType":"133","endLine":128,"endColumn":42},{"ruleId":"131","severity":1,"message":"132","line":134,"column":11,"nodeType":"133","endLine":134,"endColumn":49},{"ruleId":"116","replacedBy":"141"},{"ruleId":"118","replacedBy":"142"},{"ruleId":"120","severity":1,"message":"143","line":36,"column":6,"nodeType":"122","endLine":36,"endColumn":8,"suggestions":"144"},{"ruleId":"116","replacedBy":"145"},{"ruleId":"118","replacedBy":"146"},{"ruleId":"116","replacedBy":"147"},{"ruleId":"118","replacedBy":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHistory'. Either include it or remove the dependency array.","ArrayExpression",["151"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'app' is defined but never used.","'getAuth' is defined but never used.","'signInWithCustomToken' is defined but never used.",["149"],["150"],"React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["152"],["149"],["150"],["149"],["150"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [getHistory]",{"range":"157","text":"158"},"Update the dependencies array to be: [getUsers]",{"range":"159","text":"160"},[317,319],"[getHistory]",[990,992],"[getUsers]"]